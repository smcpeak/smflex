/* yym-set-start-state.lexpp */
/* Illustrate calling yym_set_start_state(). */

%option c++

%{
#include <assert.h>                    /* assert */

int enter_special;
%}


%x SPECIAL
%%
<SPECIAL>token  {
                  std::cout << "saw 'token' in SPECIAL state\n";
                  return 1;
                }
token           {
                  std::cout << "saw 'token' in INITIAL state\n";
                  return 2;
                }
<*>.|\n         /* discard */

%%

int main()
{
  {
    yyFlexLexer lexer;

    /* Repeatedly toggle 'enter_special' until EOF. */
    enter_special = 0;
    while (lexer.yym_lex()) {
      /* We should have gotten into the state indicated by
       * 'enter_special'. */
      assert(lexer.yym_get_start_state() ==
             (enter_special? SPECIAL : INITIAL));

      enter_special = !enter_special;

      lexer.yym_set_start_state(enter_special? SPECIAL : INITIAL);
    }
  }

  /* Toss in a use of this method too. */
  yyFlexLexer::yym_check_for_memory_leaks();

  return 0;
}
