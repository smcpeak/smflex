    // An example of using the smflex C++ scanner class.

%option c++
%option prefix="Example"

%{
int mylineno = 0;
%}

string  \"[^\n"]+\"

ws      [ \t]+

alpha   [A-Za-z]
dig     [0-9]
name    ({alpha}|{dig}|\$)({alpha}|{dig}|[_.\-/$])*
num1    [-+]?{dig}+\.?([eE][-+]?{dig}+)?
num2    [-+]?{dig}*\.{dig}+([eE][-+]?{dig}+)?
number  {num1}|{num2}

%%

{ws}    /* skip blanks and tabs */

"/*"    {
        int c;

        while((c = yyinput()) != 0)
            {
            if(c == '\n')
                ++mylineno;

            else if(c == '*')
                {
                if((c = yyinput()) == '/')
                    break;
                else
                    unput(c);
                }
            }
        }

{number}  std::cout << "number " << YYText() << '\n';

\n        mylineno++;

{name}    std::cout << "name " << YYText() << '\n';

{string}  std::cout << "string " << YYText() << '\n';

%%

int main()
{
    // Instantiate the scanner, which by default reads from cin (stdin).
    ExampleFlexLexer lexer;

    // Read tokens until EOF, doing only what the scanner actions do.
    while (lexer.yym_lex() != 0)
        {}

    return 0;
}
