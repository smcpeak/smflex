/* cpp-prefix-yywrap.lexpp */
/* C++ scanner using %option prefix and overriding yym_wrap(). */

%smflex 100
%option c++
%option prefix="MyLexer"

%{
#include <fstream>           // ifstream
#include <iostream>          // cout

using std::cout;
using std::ifstream;
using std::istream;
%}

%%
username           cout << "USERNAME";

%%

class DerivedLexer : public MyLexerFlexLexer {
public:
  virtual int yym_wrap() /*override*/;
};

/* Non-NULL once we have read the second input. */
static istream *secondFile = NULL;

int DerivedLexer::yym_wrap()
{
  if (!secondFile) {
    secondFile = new ifstream("cppscan-yywrap.input2");
    if (secondFile->fail()) {
      perror("new ifstream(cppscan-yywrap.input2)");
      delete secondFile;
      exit(2);
    }

    yym_restart(secondFile);

    /* Not done, keep going. */
    return 0;
  }
  else {
    delete secondFile;

    /* All done. */
    return 1;
  }
}


int main()
{
  {
    DerivedLexer lexer;
    while (lexer.yym_lex())
      {}
  }
  MyLexer_check_for_memory_leaks();
  return 0;
}

/* EOF */
