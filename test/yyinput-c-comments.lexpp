/* yyinput-c-comments.lexpp */
/* Demonstrate flex-compat and yyinput() with C++. */

%option main
%option c++
%option flex-compat
%option yy_read_character

%{

#include <stdio.h>           /* printf */
#include <stdlib.h>          /* exit */

static void error(char const *msg)
{
  printf("%s\n", msg);
  exit(2);
}

%}

%%
"/*"      {
            int c;
            for (;;) {
              while ( (c = yyinput()) != '*' && c != EOF )
                {}    /* eat up text of comment */

              if (c == '*') {
                while ( (c = yyinput()) == '*' )
                  {}
                if (c == '/') {
                  break;    /* found the end */
                }
              }

              if (c == EOF) {
                error("EOF in comment");
                break;
              }
            }
          }

          /* Exercise 'ECHO' with flex-compat. */
more      std::cout << "MORE"; ECHO;

%%

void dummy(yyFlexLexer &lexer)
{
  /* Simply test that 'YY_BUFFER_STATE' is exported when
   * %option flex-compat is specified. */
  YY_BUFFER_STATE b;
  b = lexer.yym_create_buffer(&std::cin, YY_BUF_SIZE);
  lexer.yym_switch_to_buffer(b);
  assert(lexer.yym_current_buffer() == b);
  lexer.yym_delete_buffer(b);

  /* Exercise not passing a size. */
  b = lexer.yym_create_buffer(&std::cin);
  lexer.yym_switch_to_buffer(b);
}
